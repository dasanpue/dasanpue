<!DOCTYPE html>
<html>
<head>
  <title>Chat</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0"> 
  <script language="javascript" type="text/javascript" src="../js/friendsearch.js"></script>
  <script language="javascript" type="text/javascript" src="../js/navbar.js"></script>
  <script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi" crossorigin="anonymous">
  
<style>
#chat3 .form-control {
border-color: transparent;
}

#chat3 .form-control:focus {
border-color: transparent;
box-shadow: inset 0px 0px 0px 1px transparent;
}

.badge-dot {
border-radius: 50%;
height: 10px;
width: 10px;
margin-left: 2.9rem;
margin-top: -.75rem;
}
</style>
</head>

<main-navbar></main-navbar>

<body>
  <section style="background-color: #ffffff;">
    <h4 id = "username"></h4>
    <h4 id = "currentroom"></h4>
    <h4 id = "currentmembers"></h4>
    <div class="container py-5">
      <form id="chatForm" class="d-flex flex-fill" action="">
        <input id="input_chat" class="form-control me-2" type="text" 
        style="width: 300px" placeholder="Create group chat..." aria-label="Search">
        <button class="btn btn-outline-success" type="submit" >Create</button>
      </form>
      <form id="inviteForm" class="d-flex flex-fill" action="">
        <input id="inviteFormInput" class="form-control me-2" type="text" 
        style="top: 100px; width: 300px" placeholder="Invite user to group chat..." aria-label="Search">
        <button class="btn btn-outline-success" type="submit">Invite</button>
      </form>
      <br><br>
  
      <div class="row">
        <div class="col-md-12">
  
          <div class="card" id="chat3" style="border-color: #ffffff;">
            <div class="card-body">
  
              <div class="row">
                <div class="col-md-6 col-lg-5 col-xl-4 mb-4 mb-md-0">
  
                  <div class="p-3">

                    <div data-mdb-perfect-scrollbar="true" style="position: relative; height: 400px">
                      Chats
                      <ul class="list-unstyled mb-0" id="chats"></ul>
                      Chats Invites
                      <ul class="list-unstyled mb-0" id="invites"></ul>
                      
                    </div>
  
                  </div>
  
                </div>
  
                <div class="col-md-6 col-lg-7 col-xl-8">

                  <div class="text-muted d-flex justify-content-start align-items-center pe-3 pt-3 mt-2">
                    <form id="form" action="">
                      <input type="text" class="form-control form-control-lg" id="input"
                      placeholder="Type a message...">
                      <button class="btn btn-outline-success" type="submit">Send</button>
                    </form>
  
                  <div class="pt-3 pe-3" data-mdb-perfect-scrollbar="true"
                    style="position: relative; height: 400px" id="messages">


                  </div>
  
                </div>
              </div>
  
            </div>
          </div>
  
        </div>
      </div>
  
    </div>
  </section>

<script src="/socket.io/socket.io.js"></script>
<script>

  var socket = io();
  
  var messages = document.getElementById('messages');
  var form = document.getElementById('form');
  var input = document.getElementById('input');
  
  var inviteForm = document.getElementById('inviteForm');
  var inviteFormInput = document.getElementById('inviteFormInput');
  var invites = document.getElementById('invites');
  var chats = document.getElementById('chats');
  var chatForm = document.getElementById('chatForm');
  var chatFormInput = document.getElementById('input_chat');
  
  var user = document.getElementById('username');
  var cr = document.getElementById('currentroom');
  var cm = document.getElementById('currentmembers');
  var currentChat = null;
  var person = null;
  
  setInterval(function() {
    if(typeof(currentChat) != "string") {
      if(currentChat != null) {
        currentChat = null;
      }
    }
    socket.emit('refresh', currentChat)
  }, 3000);

  socket.on('init', function(msg){
    var item = document.createElement('li');
    item.innerHTML = msg
    user.appendChild(item);
    person = msg
  })

  socket.on('render_content', function(msg) {
    messages.innerHTML = ""
    chats.innerHTML = "";
    invites.innerHTML = "";
    cr.innerHTML = "";
    cm.innerHTML = "";
    
    var critem = document.createElement('li');
    if (msg[1].currentChat) {
    	critem.innerHTML = "current chat: " + msg[1].currentChat;
    } else {
    	critem.innerHTML = "";
    }
    cr.appendChild(critem);
    if (msg[1].members) {
    	cm.innerHTML = "current members: " + msg[1].members.join(', ');
    } else {
    	cm.innerHTML = "";
    }
    if (msg[0] != null) {

      msg[0].Items.forEach(x => {
        var main_item = document.createElement('div')
        main_item.className = 'd-flex flex-row justify-content-start'
        var child_item = document.createElement('div')
        var p_item = document.createElement('p')
        p_item.className = 'small p-2 ms-3 mb-1 rounded-3'  
        p_item.style.backgroundColor = "#f5f6f7"
        p_item.textContent = x.sender.S + ":   " + x.message.S;
        child_item.appendChild(p_item)
        main_item.appendChild(child_item)
        messages.appendChild(main_item);
     })
    }

    msg[1].chats.forEach( x => {
      var item = document.createElement('li');
      item.innerHTML += '<input id="roomBtn" type="button" class="flex btn btn-outline-primary" value='+ x + ' onclick= changeRoom("' +x+ '") />'
      item.innerHTML += '<button id="' + x + '_Leave" class="btn btn-outline-success">Leave</button>'
      chats.appendChild(item);

      var roomId = document.getElementById(x+"_Leave");
      var roomIdVal = document.getElementById(x+"_RV");

      roomId.addEventListener('click', function(e) {
        e.preventDefault();
        var send = {
          message : x,
        }
        socket.emit("deleteChat", send)     
      });


    })
    currentChat = msg[1].currentChat;

    if(typeof(currentChat) != "string") {
      if(currentChat != null) {
        currentChat = null;
      }
    }

    msg[1].invites.forEach(x=> {
      var item = document.createElement('li');
      item.innerHTML += x
      item.innerHTML += '<button id="' + x + '_Yes" class="btn btn-outline-success">Yes</button>' 
      item.innerHTML += '<button id="' + x + '_No" class="btn btn-outline-success">No</button>' 

      invites.appendChild(item);

      var invYesId = document.getElementById(x+'_Yes');
      var invNoId = document.getElementById(x+'_No');

      invYesId.addEventListener('click', function(e) {
        e.preventDefault();
            var send = {
              message : x,
              chat : currentChat
            }
            invYesId.parentNode.removeChild(invYesId);
            socket.emit('addExistingChat', send);
        }) 
             
      invNoId.addEventListener('click', function(e) {
        e.preventDefault();
            var send = {
              message : x,
              chat : currentChat
            }
          invNoId.parentNode.removeChild(invNoId);
          socket.emit("deleteInvite", send);
      })
    })

  });
  
  socket.on('renderMessage', function(msg) {
    var main_item = document.createElement('div')
    main_item.className = 'd-flex flex-row justify-content-start'
    var child_item = document.createElement('div')
    var p_item = document.createElement('p')
    p_item.className = 'small p-2 ms-3 mb-1 rounded-3'  
    p_item.style.backgroundColor = "#f5f6f7"
    p_item.textContent = msg.sender + ":   " + msg.message;
    child_item.appendChild(p_item)
    main_item.appendChild(child_item)
    messages.insertBefore(main_item, messages.firstChild)
  });

  socket.on('renderChangeChat', function(msg) {
    messages.innerHTML = "";
    cr.innerHTML = "";
    cm.innerHTML = "";
    currentChat = msg[1].currentChat;
    var critem = document.createElement('li');
    if (currentChat) {
    	critem.innerHTML = "current chat: " + currentChat;
    } else {
    	critem.innerHTML = "";
    }
    cr.appendChild(critem);
    if (msg[1].members) {
    	cm.innerHTML = "current members: " + msg[1].members.join(', ');
    } else {
    	cm.innerHTML = "";
    }

    if (msg[0] != null) {

      msg[0].Items.forEach(x => {
        var main_item = document.createElement('div')
        main_item.className = 'd-flex flex-row justify-content-start'
        var child_item = document.createElement('div')
        var p_item = document.createElement('p')
        p_item.className = 'small p-2 ms-3 mb-1 rounded-3'  
        p_item.style.backgroundColor = "#f5f6f7"
        p_item.textContent = x.sender.S + ":   " + x.message.S;
        child_item.appendChild(p_item)
        main_item.appendChild(child_item)
        messages.appendChild(main_item);
      })
   }
  })
  
  socket.on("Error", arg =>{
    alert(arg)
  })
  
  form.addEventListener('submit', function(e) {
    e.preventDefault();
    if (input.value) {
      var send = {
        message : input.value,
        chat : currentChat,
        sender : person
      }
      if (currentChat) {
      	socket.emit('sendMessage', send);
      } else {
      	alert("No chat selected");
      }
      input.value = '';
    }
  });

  function changeRoom(e) {
    if (e != currentChat) {
      socket.emit("changeChat", e)
    }
  }

  chatForm.addEventListener('submit', function(e) {
    e.preventDefault();
    if (chatFormInput.value) {
      var send = {
        message : chatFormInput.value,
        chat : currentChat
      }
      socket.emit("addNewChat", send);
      socket.emit('refresh', currentChat);
      chatFormInput.value = '';
    }
  });

  inviteForm.addEventListener('submit', function(e) {
    e.preventDefault();
    if (inviteFormInput.value) {

      var send = {
        message : inviteFormInput.value,
        chat : currentChat
      }
      socket.emit("sendInvite", send);
      socket.emit('refresh', currentChat);
      inviteFormInput.value = '';
    }
  });


</script>

</body>
</html>